{"version":3,"sources":["components/Joke.js","components/Main.js","components/LikeList.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","joke","categories","updated_at","id","icon_url","value","useContext","likeListOperations","addToLikeList","removeFromLikeList","findInLikeList","className","onClick","style","left","top","src","alt","color","justifyContent","width","Date","parse","getHours","Main","useReducer","data","update","active","dispatch","useEffect","fetch","then","response","json","selectRadio","e","target","selectCategory","category","getAttribute","type","onChange","checked","map","item","index","searchVal","console","log","result","Math","floor","random","length","searchByCategory","LikeList","list","useState","val","setVal","filter","includes","createContext","App","likeList","setLikeList","window","innerWidth","showFv","setShowFv","background","theme","setTheme","onResize","localStorage","getItem","JSON","addEventListener","removeEventListener","Provider","find","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9bd3f2fd.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\n\r\nimport { likeListOperations } from \"../App\";\r\n\r\nconst Joke = ({ joke }) => {\r\n  const { categories, updated_at, icon_url, id, value } = joke;\r\n\r\n  const { addToLikeList, removeFromLikeList, findInLikeList } = useContext(\r\n    likeListOperations\r\n  );\r\n\r\n  return (\r\n    <div className=\"joke column centered\">\r\n      {findInLikeList(joke) ? (\r\n        <div\r\n          onClick={() => removeFromLikeList(joke)}\r\n          className=\"row centered icon-wrapper\"\r\n          style={{ left: \"40%\", top: \"5%\" }}\r\n        >\r\n          <img src=\"/heart.png\" alt=\"\" className=\"icon heart-icon\" />\r\n        </div>\r\n      ) : (\r\n        <div\r\n          onClick={() => addToLikeList(joke)}\r\n          className=\"row centered icon-wrapper\"\r\n          style={{ left: \"40%\", top: \"5%\" }}\r\n        >\r\n          <img\r\n            src=\"/heart_none_active.png\"\r\n            alt=\"\"\r\n            className=\"icon heart-icon\"\r\n          />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"column centered\">\r\n        <div className=\"row\">\r\n          <span style={{ color: \"lightblue\" }}>{id}</span>\r\n        </div>\r\n        <p>{value}</p>\r\n        <div\r\n          className=\"row centered\"\r\n          style={{ justifyContent: \"space-between\", width: \"100%\" }}\r\n        >\r\n          <span style={{ color: \"lightslategray\" }}>\r\n            Last update: {new Date(Date.parse(updated_at)).getHours()} hours\r\n          </span>\r\n          {categories[0] && (\r\n            <div className=\"category active row centered\">\r\n              <span>{categories[0]}</span>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Joke;\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport Joke from \"./Joke\";\r\n\r\nconst Main = () => {\r\n  const reducer = (data, update) => {\r\n    return {\r\n      ...data,\r\n      ...update,\r\n    };\r\n  };\r\n\r\n  const [data, dispatch] = useReducer(reducer, { active: \"random\" });\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.chucknorris.io/jokes/categories`)\r\n      .then((response) => response.json())\r\n      .then((categories) => dispatch({ categories }));\r\n  }, []);\r\n\r\n  const selectRadio = (e) => dispatch({ active: e.target.value });\r\n\r\n  const selectCategory = (e) =>\r\n    dispatch({ category: e.target.getAttribute(\"data-category\") });\r\n\r\n  const handleSearch = (e) => dispatch({ searchVal: e.target.value });\r\n\r\n  const searchByCategory = (category) => {\r\n    fetch(`https://api.chucknorris.io/jokes/random?category=${category}`)\r\n      .then((response) => response.json())\r\n      .then((joke) => dispatch({ joke }));\r\n  };\r\n\r\n  const searchByRequest = (request) => {\r\n    fetch(`https://api.chucknorris.io/jokes/search?query=${request}`)\r\n      .then((response) => response.json())\r\n      .then((joke) => {\r\n        console.log(joke);\r\n        dispatch({\r\n          joke: joke.result[Math.floor(Math.random() * joke.result.length - 1)],\r\n          searchVal: \"\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const getRandomJoke = () => {\r\n    fetch(`https://api.chucknorris.io/jokes/random`)\r\n      .then((response) => response.json())\r\n      .then((joke) => dispatch({ joke }));\r\n  };\r\n\r\n  const getJoke = () => {\r\n    const { active, category, searchVal } = data;\r\n\r\n    return active === \"search\" && searchVal\r\n      ? searchByRequest(searchVal)\r\n      : active === \"category\"\r\n      ? searchByCategory(category)\r\n      : getRandomJoke();\r\n  };\r\n\r\n  return (\r\n    <div className=\"main column\">\r\n      <h1>Chuck Norris</h1>\r\n      <h3>Let s try to find a joke for you</h3>\r\n      <div className=\"column\">\r\n        <div className=\"input-wrapper row\">\r\n          <input\r\n            type=\"radio\"\r\n            value=\"random\"\r\n            onChange={selectRadio}\r\n            checked={data.active === \"random\"}\r\n          />\r\n          <span>Random</span>\r\n        </div>\r\n        <div className=\"input-wrapper row\">\r\n          <input\r\n            type=\"radio\"\r\n            value=\"category\"\r\n            onChange={selectRadio}\r\n            checked={data.active === \"category\"}\r\n          />\r\n          <span>From categories</span>\r\n        </div>\r\n        {data.active === \"category\" && data.categories && (\r\n          <div className=\"category-wrapper row\">\r\n            {data.categories.map((item, index) => (\r\n              <button\r\n                key={index}\r\n                className={`category row centered ${\r\n                  data.category === item && \"active\"\r\n                }`}\r\n                data-category={item}\r\n                onClick={selectCategory}\r\n              >\r\n                {item}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        )}\r\n        <div className=\"input-wrapper row\">\r\n          <input\r\n            type=\"radio\"\r\n            value=\"search\"\r\n            onChange={selectRadio}\r\n            checked={data.active === \"search\"}\r\n          />\r\n          <span>Search</span>\r\n        </div>\r\n        {data.active === \"search\" && (\r\n          <input\r\n            type=\"text\"\r\n            id=\"search\"\r\n            onChange={handleSearch}\r\n            value={data.searchVal || \"\"}\r\n          />\r\n        )}\r\n      </div>\r\n      <button onClick={getJoke}>Get joke</button>\r\n      {data.joke && <Joke joke={data.joke} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport Joke from \"./Joke\";\r\n\r\nconst LikeList = ({ list }) => {\r\n  const [val, setVal] = useState();\r\n\r\n  return (\r\n    <div className=\"likelist column\">\r\n      <h4>Favourite:</h4>\r\n      <input type=\"text\" onChange={(e) => setVal(e.target.value)} />\r\n      {list.length < 1 ? (\r\n        <h5>Nothing here yet</h5>\r\n      ) : val ? (\r\n        list\r\n          .filter((item) => item.value.includes(val))\r\n          .map((item, index) => <Joke key={index} joke={item} />)\r\n      ) : (\r\n        list.map((item, index) => <Joke key={index} joke={item} />)\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LikeList;\r\n","import { useEffect, useState, createContext } from \"react\";\n\nimport Main from \"./components/Main\";\nimport LikeList from \"./components/LikeList\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [likeList, setLikeList] = useState([]);\n  const [showFv, setShowFv] = useState(!window.innerWidth < 800);\n  const [theme, setTheme] = useState({\n    color: \"black\",\n    background: \"white\",\n  });\n\n  const addToLikeList = (joke) => {\n    setLikeList([...likeList, joke]);\n  };\n\n  const removeFromLikeList = (joke) => {\n    setLikeList(likeList.filter((item) => item.id !== joke.id));\n  };\n\n  const findInLikeList = (joke) => {\n    return likeList.find((item) => item.id === joke.id);\n  };\n\n  const onResize = () => setShowFv(window.innerWidth > 1024);\n\n  useEffect(() => {\n    localStorage.getItem(\"likeList\") &&\n      setLikeList(JSON.parse(localStorage.getItem(\"likeList\")));\n\n    window.addEventListener(\"resize\", onResize);\n\n    return () => {\n      window.removeEventListener(\"resize\");\n    };\n  }, []);\n\n  return (\n    <div className=\"app row\" style={theme}>\n      <img\n        className=\"show-fv\"\n        onClick={() => setShowFv(!showFv)}\n        src={showFv ? \"/close.png\" : \"/menu.png\"}\n        alt=\"action\"\n      />\n\n      <likeListOperations.Provider\n        value={{ addToLikeList, removeFromLikeList, findInLikeList }}\n      >\n        <div className=\"main-wrapper column\">\n          <Main />\n          <div className=\"theme-wrapper row centered\">\n            <div\n              className=\"round-theme\"\n              onClick={() => setTheme({ color: \"black\", background: \"white\" })}\n              style={{ background: \"white\" }}\n            ></div>\n            <div\n              className=\"round-theme\"\n              onClick={() =>\n                setTheme({\n                  color: \"white\",\n                  background: \"linear-gradient(40deg, purple, blue)\",\n                })\n              }\n              style={{\n                background: \"linear-gradient(40deg, purple, blue)\",\n              }}\n            ></div>\n            <div\n              className=\"round-theme\"\n              onClick={() =>\n                setTheme({ color: \"white\", background: \"rgb(20,20,20)\" })\n              }\n              style={{ background: \"#333333\" }}\n            ></div>\n          </div>\n        </div>\n        {showFv && <LikeList list={likeList} />}\n      </likeListOperations.Provider>\n    </div>\n  );\n};\n\nexport const likeListOperations = createContext();\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}